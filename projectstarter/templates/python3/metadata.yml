description: "python command line program"
requirements:
  - pip
  - virtualenv
commands:
  - "{{ options.venv.commands }}"
  - "{{ options.git.commands }}"
  - "{{ options.license.commands }}"
files:
  - "{{ project.slug }}/__init__.py.j2"
  - "{{ project.slug }}/__main__.py.j2"
options:
  venv:
    description: "create a virtual environment"
    files:
      - "requirements.txt.j2"
    commands:
      - "virtualenv venv --python={{ which('python3') }}"
      - "{% if options.cli is defined or options.cli_subcommands is defined %}source venv/bin/activate && pip install wheel{% endif %}"
      - "source venv/bin/activate && pip install -r requirements.txt"
  package:
    description: add packaging files
    files:
      - "setup.py.j2"
      - "setup.cfg.j2"
      - "MANIFEST.in.j2"
      - "{{ project.slug }}/_version.py.j2"
  cli:
    description : add a command line interface structure
    files:
      - "{{ project.slug }}/cli.py.j2"
  cli_subcommands:
    description : add a subcommands structure
    files:
      - "{{ project.slug }}/cli.py.j2"
      - "{{ project.slug }}/example/"
  logging:
    description: setup simple logging
    files:
      - "{{ project.slug }}/log.py.j2"
  git:
    description: create a git repository
    include_templates:
      - git
  readme:
    description: create a README.md file
    files:
      - "README.md.j2"
  license:
    description: create a license file
    include_templates:
      - license
  makefile:
    description: add a Makefile
    files:
      - "Makefile.j2"
